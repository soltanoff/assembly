 .ref _c_int00	;точка входа
_c_int00:
	
 .data
array: .int 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24;
size .set 24

 .text	;секция кода 
	MVKL .S1 array, A1		;загружаем адрес массива в А4
	MVKH .S1 array, A1
	MVKL .S2 array, B1		;загружаем адрес массива в B4
	MVKH .S2 array, B1
	
	ADD .S2 B1, 4, B1		;переход ко 2-му эл-ту массива
	MVK .S1 1, A2			;A2 = 1
	|| MVK .S2 1, B2			;B2 = 1
	MVK .S2 size, B0		;загружаем кол-во элементов массива в B0

	;предварительная загрузка
	[B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3
	[B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3
	[B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3
	[B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3
	[B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3

	MPY .M1 A2, A3, A2		;A2 = A2 * A3
	|| MPY .M2 B2, B3, B2		;B2 = B2 * B3
	|| [B0] SUB .S2 B0, 2, B0		;B0 = B0 - 2
	|| LDW .D1 *A1++[2], A3	;загружаем эл-т массива в A3
	|| LDW .D2 *B1++[2], B3		;загружаем эл-т массива в B3
	
;начало цикла
LOOP:
	[B0] B .S1 LOOP			;Если B0 != 0, переход к метке LOOP
	|| [B0] MPY .M1 A2, A3, A2		;Если B0 != 0, A2 = A2 * A3
	|| [B0] MPY .M2 B2, B3, B2		;Если B0 != 0, B2 = B2 * B3
	|| [B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	[B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| MPY .M1 A2, A3, A2			;A2 = A2 * A3
	|| MPY .M2 B2, B3, B2			;B2 = B2 * B3
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	[B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| MPY .M1 A2, A3, A2			;A2 = A2 * A3
	|| MPY .M2 B2, B3, B2			;B2 = B2 * B3
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	[B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| MPY .M1 A2, A3, A2			;A2 = A2 * A3
	|| MPY .M2 B2, B3, B2			;B2 = B2 * B3
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	[B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| MPY .M1 A2, A3, A2			;A2 = A2 * A3
	|| MPY .M2 B2, B3, B2			;B2 = B2 * B3
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	[B0] LDW .D1 *A1++[2], A3		;Если B0 != 0, загружаем эл-т массива в A3
	|| [B0] LDW .D2 *B1++[2], B3		;Если B0 != 0, загружаем эл-т массива в B3
	|| [B0] MPY .M1 A2, A3, A2		;A2 = A2 * A3
	|| [B0] MPY .M2 B2, B3, B2		;B2 = B2 * B3
	|| [!B0] MV .L1 A2, A4			;Если B0 = 0, значение из A2 перемещаем в A4
	|| [!B0] MV .L2 B2, B4			;Если B0 = 0, значение из B2 перемещаем в B4
	|| [B0] SUB .S2 B0, 2, B0			;B0 = B0 - 2
	
	MPY .M1 A2, A4, A5			;A5 = A2 * A4
	|| MPY .M2 B2, B4, B5			;B5 = B2 * B4
	NOP 1
	MPY .M1X A5, B5, A0			;результат вычисления A0 = A5 * B5
	NOP 1
.end
